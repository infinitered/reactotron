# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

defaults: &defaults
  working_directory: ~/repo

version: 2.1
orbs:
  node: circleci/node@5.1.0

commands:
  install-packages:
    description: Install and cache npm packages
    parameters:
      cache-key:
        description: Key to bust install package cache
        type: string
        default: "cache-key-1681340799350"
    steps:
      - restore_cache:
          name: Restore yarn package cache
          keys:
            - node-deps-<<parameters.cache-key>>-{{ arch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore apps/reactotron-app/dist/
          keys:
            - apps/reactotron-app/dist/-<<parameters.cache-key>>-{{ arch }}-{{ checksum "apps/reactotron-app/package.json" }}
      - restore_cache:
          name: Restoring lib/reactotron-apisauce/dist/
          keys:
            - lib/reactotron-apisauce/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-apisauce/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-core-client/dist/
          keys:
            - lib/reactotron-core-client/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-client/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-core-server/dist/
          keys:
            - lib/reactotron-core-server/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-server/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-core-ui/dist/
          keys:
            - lib/reactotron-core-ui/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-ui/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-mst/dist/
          keys:
            - lib/reactotron-mst/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-mst/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-react-js/dist/
          keys:
            - lib/reactotron-react-js/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-react-js/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-react-native/dist/
          keys:
            - lib/reactotron-react-native/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-react-native/package.json" }}
      - restore_cache:
          name: Restore lib/reactotron-redux/dist/
          keys:
            - lib/reactotron-redux/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-redux/package.json" }}
      - run:
          name: Install packages
          command: yarn install --immutable
      - save_cache:
          paths:
            - node_modules/
            - .yarn/cache
            - .yarn/install-state.gz
          key: node-deps-<<parameters.cache-key>>-{{ arch }}-{{ checksum "yarn.lock" }}
      - save_cache:
          name: Saving lib/reactotron-app/dist/
          paths:
            - apps/reactotron-app/dist/
          key: apps/reactotron-app/dist/-<<parameters.cache-key>>-{{ arch }}-{{ checksum "apps/reactotron-app/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-apisauce/dist/
          paths:
            - lib/reactotron-apisauce/dist/
          key: lib/reactotron-apisauce/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-apisauce/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-core-client/dist/
          paths:
            - lib/reactotron-core-client/dist/
          key: lib/reactotron-core-client/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-client/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-core-server/dist/
          paths:
            - lib/reactotron-core-server/dist/
          key: lib/reactotron-core-server/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-server/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-core-ui/dist/
          paths:
            - lib/reactotron-core-ui/dist/
          key: lib/reactotron-core-ui/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-core-ui/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-mst/dist/
          paths:
            - lib/reactotron-mst/dist/
          key: lib/reactotron-mst/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-mst/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-react-native/dist/
          paths:
            - lib/reactotron-react-native/dist/
          key: lib/reactotron-react-native/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-react-native/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-react-js/dist/
          paths:
            - lib/reactotron-react-js/dist/
          key: lib/reactotron-react-js/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-react-js/package.json" }}
      - save_cache:
          name: Saving lib/reactotron-redux/dist/
          paths:
            - lib/reactotron-redux/dist/
          key: lib/reactotron-redux/dist/-<<parameters.cache-key>>-{{ checksum "lib/reactotron-redux/package.json" }}
  release-reactotron-app:
    description: Create release build of Reactotron app, upload to workspace
    parameters:
      os:
        type: string
    steps:
      - run:
          name: Build release <<parameters.os>> app
          command: yarn workspace reactotron-app build:release
      - run:
          name: Remove release/builder-debug.yml and default._Reactotron-x.x.x.dmg file to prevent uploading identitical files between jobs
          command: find apps/reactotron-app/release -type f \( -name "*.yml" -or -name "*.yaml" -or -name "default.*" \) -delete
      - persist_to_workspace:
          root: ~/repo/apps/reactotron-app
          paths:
            - release/*

jobs:
  build_and_test:
    <<: *defaults
    executor: &node_executor
      name: node/default
      resource_class: large
    steps:
      - checkout
      - install-packages
      - run:
          name: Build
          command: yarn build
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Format Check
          command: yarn format:check
      - run:
          name: Tests
          command: yarn ci:test
      - run:
          name: Typecheck
          command: yarn typecheck

  release_tags:
    <<: *defaults
    executor: *node_executor
    steps:
      - checkout
      - install-packages
      - run:
          name: Set Git Identity
          command: |
            git config --global user.email "ci@infinite.red"
            git config --global user.name "Infinite Red"
            git remote set-url origin https://$GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
      - run:
          name: Create git tags and commits for releases
          command: yarn release:tags
      - run:
          name: Push new commits to release branch
          command: git push origin $CIRCLE_BRANCH
      - run:
          name: Publish new tags from commits created on release branch
          command: yarn release:tags:push

  release_package:
    <<: *defaults
    executor: *node_executor
    steps:
      - checkout
      - install-packages
      - run:
          name: Release to npm and github
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
            npm whoami
            yarn release:artifacts $CIRCLE_TAG

  build_app_windows:
    <<: *defaults
    docker:
      - image: electronuserland/builder:16-wine
    environment:
      BUILD_TARGET: windows
    steps:
      - checkout
      - install-packages
      - release-reactotron-app:
          os: Windows

  build_app_linux:
    <<: *defaults
    executor: *node_executor
    environment:
      BUILD_TARGET: linux
    steps:
      - checkout
      - install-packages
      - run:
          name: Update apt-get
          command: sudo apt update
      - run:
          name: Install dependencies
          command: sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm
      - release-reactotron-app:
          os: Linux

  build_app_macos:
    <<: *defaults
    macos:
      xcode: "13.3.1"
    environment:
      BUILD_TARGET: macos
    steps:
      - checkout
      - install-packages
      - run:
          name: Decode Certificates
          command: echo "$ReactotronCerts" | base64 --decode > ~/repo/apps/reactotron-app/Certificates.p12
      - run:
          name: Install Bundler
          command: gem install bundler:1.16.1
      - run:
          name: Install Gems
          command: |
            cd apps/reactotron-app
            bundle install
      - run:
          name: Install Cert
          command: |
            cd apps/reactotron-app
            bundle exec fastlane setup
      - release-reactotron-app:
          os: MacOS

  release_app:
    <<: *defaults
    executor: *node_executor
    steps:
      - checkout
      - install-packages
      - attach_workspace:
          at: ~/repo/apps/reactotron-app
      - run:
          name: Create git tags and commits for releases
          command: yarn workspace reactotron-app release:artifacts $CIRCLE_TAG

workflows:
  pull_request:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: &release_branch_names
                - master
                - beta
                - alpha

  release:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: *release_branch_names
      - release_tags:
          context:
            - infinitered-npm-package
          filters:
            branches:
              only: *release_branch_names
          requires:
            - build_and_test
      - release_package:
          context:
            - infinitered-npm-package
          filters:
            branches: &release_branch_filter
              ignore: /.*/ # ignore all branches
            tags:
              only:
                - /^(?!reactotron-app)reactotron-.*@.*/ # matches 'reactotron-core-ui@2.0.1' but not 'reactotron-app@3.0.0'
      - build_app_windows:
          context:
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: &release_app_filter
                - /^reactotron-app@.*/
      - build_app_macos:
          context:
            - ReactotronCerts
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: *release_app_filter
      - build_app_linux:
          context:
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: *release_app_filter
      - release_app:
          context:
            - infinitered-npm-package
          filters:
            branches: *release_branch_filter
            tags:
              only: *release_app_filter
          requires:
            - build_app_windows
            - build_app_macos
            - build_app_linux
# VS Code Extension Version: 1.5.1
