# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

defaults: &defaults
  working_directory: ~/repo

version: 2
jobs:
  build_and_test:
    <<: *defaults
    macos:
      xcode: "10.1.0"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Tests
          command: yarn test
      - run:
          name: TypeScript Compile
          command: yarn compile
      - run:
          name: Build App
          command: yarn build

  setup_release:
    <<: *defaults
    macos:
      xcode: "10.1.0"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Tests
          command: yarn test
      - run:
          name: TypeScript Compile
          command: yarn compile
      - run:
          name: Generate Semantic Release
          command: yarn semantic-release
      - run:
          name: Setup worksapce
          command: mkdir -p workspace
      - run:
          name: Copy everything into the workspace
          command: cp -R build workspace/build && cp package.json workspace/package.json && cp release-info.txt workspace/release-info.txt
      - persist_to_workspace:
          root: workspace
          paths:
            - build
            - package.json
            - release-info.txt

  release_windows:
    <<: *defaults
    docker:
      - image: electronuserland/builder:wine
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Move Build and Package into the right place
          command: mv workspace/build build && mv workspace/package.json package.json
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - run:
          name: Set prerelease if needed
          command: |
              if [[ `cat workspace/release-info.txt` == "beta" ]] || [[ `cat workspace/release-info.txt` == "alpha" ]] || [[ `cat workspace/release-info.txt` == "next" ]]; then
                export EP_PRE_RELEASE=true
              fi
      - run:
          name: Release Windows
          command: yarn release -w

  release_nix:
    <<: *defaults
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Move Build and Package into the right place
          command: mv workspace/build build && mv workspace/package.json package.json
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - run:
          name: Decode Certificates
          command: base64 -D -o Certificates.p12 <<< $ReactotronCerts
      - run:
          name: Install Gems
          command: bundle install
      - run:
          name: Install Cert
          command: bundle exec fastlane setup
      - run:
          name: Install Snapcraft
          command: HOMEBREW_NO_INSTALL_CLEANUP=1 brew install snapcraft rpm
      - run:
          name: Set prerelease if needed
          command: |
              if [[ `cat workspace/release-info.txt` == "beta" ]] || [[ `cat workspace/release-info.txt` == "alpha" ]] || [[ `cat workspace/release-info.txt` == "next" ]]; then
                export EP_PRE_RELEASE=true
              fi
      - run:
          name: Release Mac and Linux
          command: yarn release -ml -c.snap.publish=github

workflows:
  version: 2
  pull_request:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore:
                - master
                - beta

  release:
    jobs:
      - setup_release:
          filters:
            branches:
              only:
                - master
                - beta
      - release_windows:
          filters:
            branches:
              only:
                - master
                - beta
          requires:
            - setup_release
      - release_nix:
          context: ReactotronCerts
          filters:
            branches:
              only:
                - master
                - beta
          requires:
            - setup_release
